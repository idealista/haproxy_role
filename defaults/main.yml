---

## General
# Version (tested with haproxy > 2.0)
haproxy_version: 2.6.1

# Package URL
haproxy_package: "haproxy-{{ haproxy_version }}.tar.gz"
haproxy_url: "https://www.haproxy.org/download/{{ haproxy_version.split('.')[:-1] | join('.') }}/src/{{ haproxy_package }}"

# Package paths
haproxy_download_path: "/tmp/haproxy-{{ haproxy_version }}"
haproxy_package_path: "{{ haproxy_download_path }}/{{ haproxy_package }}"
haproxy_src_bin: "{{ haproxy_download_path }}/haproxy-{{ haproxy_version }}/haproxy"

# Set true to force the download and installation of the binary
haproxy_force_reinstall: false

# Installation paths
haproxy_bin_path: /usr/local/sbin
haproxy_exec_name: haproxy
haproxy_conf_path: /etc/haproxy
haproxy_conf_file: haproxy.cfg
haproxy_conf_errors_path: "{{ haproxy_conf_path }}/errors"
haproxy_conf_errors_template_path: "templates/errors"
haproxy_logrotate_template_path: templates/logrotate.j2
haproxy_run_path: /run
haproxy_var_lib_path: /var/lib/haproxy
haproxy_var_lib_dev_path: "{{ haproxy_var_lib_path }}/dev"
haproxy_skeleton_paths:
  - "{{ haproxy_bin_path }}"
  - "{{ haproxy_conf_path }}"
  - "{{ haproxy_conf_errors_path }}"
  - "{{ haproxy_download_path }}"
  - "{{ haproxy_var_lib_path }}"
  - "{{ haproxy_var_lib_dev_path }}"
haproxy_skeleton_log_paths:
  - "{{ haproxy_log_path }}"


## Service options
haproxy_documentation_link: "http://docs.haproxy.org/{{ haproxy_version.split('.')[:-1] | join('.') }}/configuration.html"
haproxy_env_files:
  - "/etc/default/{{ haproxy_exec_name }}"
  - "/etc/sysconfig/{{ haproxy_exec_name }}"
haproxy_env_options:
  - "-S {{ haproxy_master_sock }}"
haproxy_master_sock: "{{ haproxy_run_path }}/{{ haproxy_exec_name }}-master.sock"
haproxy_pid_file: "{{ haproxy_run_path }}/{{ haproxy_exec_name }}.pid"
haproxy_service_description: "HAProxy Load Balancer"
haproxy_success_exit_status: 143


# Owner
haproxy_user: haproxy
haproxy_group: haproxy
haproxy_user_shell: /usr/sbin/nologin


# Start on boot
haproxy_service_enabled: True
# Current state: started, stopped
haproxy_service_state: started


# Logs
# If wanted to output the logs to a file define the following variable
# More information at https://www.freedesktop.org/software/systemd/man/systemd.exec.html#StandardOutput=
haproxy_log_path: /var/log/haproxy
haproxy_log_file: "{{ haproxy_log_path }}/haproxy.log"
haproxy_rsyslog_enable: true
haproxy_rsyslog_file: "49-haproxy.conf"
# haproxy_log_output: "{% if haproxy_log_file is defined %} file:{{ haproxy_log_file }} {% else %} journal {% endif %}"


# Config vars
haproxy_custom_template_path: "{{ playbook_dir }}/templates/haproxy"
haproxy_logrotate_enabled: true

haproxy_system_dependencies:
  - libsystemd-dev
  - libpcre3-dev
  - libssl-dev
  - zlib1g-dev
  - socat
  - make
  - gcc

haproxy_compiling_params:
  TARGET: linux-glibc
  USE_NS: 1
  USE_TFO: 1
  USE_OPENSSL: 1
  USE_ZLIB: 1
  USE_PCRE: 1
  USE_SYSTEMD: 1
  USE_LIBCRYPT: 1
  USE_THREAD: 1
